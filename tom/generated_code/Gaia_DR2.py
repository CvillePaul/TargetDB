from django.db import models


class Gaia_DR2(models.Model):
    solution_id = models.BigIntegerField(null=True)
    DESIGNATION = models.CharField(max_length=100, null=True, unique=True)
    source_id = models.CharField(max_length=100, null=True, unique=True)
    random_index = models.BigIntegerField(null=True)
    ref_epoch = models.FloatField(null=True)
    ra = models.FloatField(null=True)
    ra_error = models.FloatField(null=True)
    dec = models.FloatField(null=True)
    dec_error = models.FloatField(null=True)
    parallax = models.CharField(max_length=100, null=True)
    parallax_error = models.CharField(max_length=100, null=True)
    parallax_over_error = models.CharField(max_length=100, null=True)
    pmra = models.CharField(max_length=100, null=True)
    pmra_error = models.CharField(max_length=100, null=True)
    pmdec = models.CharField(max_length=100, null=True)
    pmdec_error = models.CharField(max_length=100, null=True)
    ra_dec_corr = models.FloatField(null=True)
    ra_parallax_corr = models.CharField(max_length=100, null=True)
    ra_pmra_corr = models.CharField(max_length=100, null=True)
    ra_pmdec_corr = models.CharField(max_length=100, null=True)
    dec_parallax_corr = models.CharField(max_length=100, null=True)
    dec_pmra_corr = models.CharField(max_length=100, null=True)
    dec_pmdec_corr = models.CharField(max_length=100, null=True)
    parallax_pmra_corr = models.CharField(max_length=100, null=True)
    parallax_pmdec_corr = models.CharField(max_length=100, null=True)
    pmra_pmdec_corr = models.CharField(max_length=100, null=True)
    astrometric_n_obs_al = models.IntegerField(null=True)
    astrometric_n_obs_ac = models.IntegerField(null=True)
    astrometric_n_good_obs_al = models.IntegerField(null=True)
    astrometric_n_bad_obs_al = models.IntegerField(null=True)
    astrometric_gof_al = models.FloatField(null=True)
    astrometric_chi2_al = models.FloatField(null=True)
    astrometric_excess_noise = models.FloatField(null=True)
    astrometric_excess_noise_sig = models.FloatField(null=True)
    astrometric_params_solved = models.IntegerField(null=True)
    astrometric_primary_flag = models.CharField(max_length=100, null=True)
    astrometric_weight_al = models.FloatField(null=True)
    astrometric_pseudo_colour = models.CharField(max_length=100, null=True)
    astrometric_pseudo_colour_error = models.CharField(max_length=100, null=True)
    mean_varpi_factor_al = models.FloatField(null=True)
    astrometric_matched_observations = models.IntegerField(null=True)
    visibility_periods_used = models.IntegerField(null=True)
    astrometric_sigma5d_max = models.FloatField(null=True)
    frame_rotator_object_type = models.IntegerField(null=True)
    matched_observations = models.IntegerField(null=True)
    duplicated_source = models.CharField(max_length=100, null=True)
    phot_g_n_obs = models.IntegerField(null=True)
    phot_g_mean_flux = models.FloatField(null=True)
    phot_g_mean_flux_error = models.FloatField(null=True)
    phot_g_mean_flux_over_error = models.FloatField(null=True)
    phot_g_mean_mag = models.FloatField(null=True)
    phot_bp_n_obs = models.IntegerField(null=True)
    phot_bp_mean_flux = models.CharField(max_length=100, null=True)
    phot_bp_mean_flux_error = models.CharField(max_length=100, null=True)
    phot_bp_mean_flux_over_error = models.CharField(max_length=100, null=True)
    phot_bp_mean_mag = models.CharField(max_length=100, null=True)
    phot_rp_n_obs = models.IntegerField(null=True)
    phot_rp_mean_flux = models.CharField(max_length=100, null=True)
    phot_rp_mean_flux_error = models.CharField(max_length=100, null=True)
    phot_rp_mean_flux_over_error = models.CharField(max_length=100, null=True)
    phot_rp_mean_mag = models.CharField(max_length=100, null=True)
    phot_bp_rp_excess_factor = models.CharField(max_length=100, null=True)
    phot_proc_mode = models.IntegerField(null=True)
    bp_rp = models.CharField(max_length=100, null=True)
    bp_g = models.CharField(max_length=100, null=True)
    g_rp = models.CharField(max_length=100, null=True)
    radial_velocity = models.CharField(max_length=100, null=True)
    radial_velocity_error = models.CharField(max_length=100, null=True)
    rv_nb_transits = models.IntegerField(null=True)
    rv_template_teff = models.CharField(max_length=100, null=True)
    rv_template_logg = models.CharField(max_length=100, null=True)
    rv_template_fe_h = models.CharField(max_length=100, null=True)
    phot_variable_flag = models.CharField(max_length=100, null=True)
    l = models.FloatField(null=True)
    b = models.FloatField(null=True)
    ecl_lon = models.FloatField(null=True)
    ecl_lat = models.FloatField(null=True)
    priam_flags = models.CharField(max_length=100, null=True)
    teff_val = models.CharField(max_length=100, null=True)
    teff_percentile_lower = models.CharField(max_length=100, null=True)
    teff_percentile_upper = models.CharField(max_length=100, null=True)
    a_g_val = models.CharField(max_length=100, null=True)
    a_g_percentile_lower = models.CharField(max_length=100, null=True)
    a_g_percentile_upper = models.CharField(max_length=100, null=True)
    e_bp_min_rp_val = models.CharField(max_length=100, null=True)
    e_bp_min_rp_percentile_lower = models.CharField(max_length=100, null=True)
    e_bp_min_rp_percentile_upper = models.CharField(max_length=100, null=True)
    flame_flags = models.CharField(max_length=100, null=True)
    radius_val = models.CharField(max_length=100, null=True)
    radius_percentile_lower = models.CharField(max_length=100, null=True)
    radius_percentile_upper = models.CharField(max_length=100, null=True)
    lum_val = models.CharField(max_length=100, null=True)
    lum_percentile_lower = models.CharField(max_length=100, null=True)
    lum_percentile_upper = models.CharField(max_length=100, null=True)
    datalink_url = models.CharField(max_length=100, null=True)
    epoch_photometry_url = models.CharField(max_length=100, null=True)
    TIC_ID = models.IntegerField(null=True)
    TIC_Distance = models.FloatField(null=True)
