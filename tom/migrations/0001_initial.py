# Generated by Django 4.2.7 on 2023-11-29 16:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Observation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("utc_date", models.DateField()),
                ("equipment", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="ObservationPurpose",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("purpose", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Observatory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nickname", models.CharField(max_length=15)),
                ("name", models.CharField(max_length=100)),
                ("iau_code", models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="ObservingProgram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("email", models.CharField(max_length=100)),
                ("affiliation", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Target",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("local_id", models.CharField(max_length=100, unique=True)),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        help_text="How target was identified/discovered",
                        max_length=100,
                    ),
                ),
                ("ra", models.FloatField(verbose_name="RA (deg)")),
                ("dec", models.FloatField(verbose_name="Dec (deg)")),
                ("pmra", models.FloatField(default=0, verbose_name="PM RA (mas/yr)")),
                ("pmdec", models.FloatField(default=0, verbose_name="PM Dec (mas/yr)")),
                (
                    "distance",
                    models.FloatField(default=0, verbose_name="Distance (pc)"),
                ),
                ("magnitude", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="TargetIdType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_type", models.CharField(max_length=100, unique=True)),
                ("comment", models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="CalibrationTarget",
            fields=[
                (
                    "target_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="tom.target",
                    ),
                ),
            ],
            bases=("tom.target",),
        ),
        migrations.CreateModel(
            name="TargetList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("targets", models.ManyToManyField(to="tom.target")),
            ],
        ),
        migrations.CreateModel(
            name="TargetIdentifier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("identifier", models.CharField(max_length=100)),
                (
                    "id_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tom.targetidtype",
                    ),
                ),
                (
                    "target",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tom.target"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SpectrumRawData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uri", models.CharField(max_length=200)),
                ("size", models.IntegerField(default=0)),
                (
                    "observation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tom.observation",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SpeckleRawData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uri", models.CharField(max_length=200)),
                ("size", models.IntegerField(default=0)),
                ("gain", models.PositiveIntegerField()),
                ("exposure_time_ms", models.PositiveIntegerField()),
                ("num_sequences", models.PositiveIntegerField()),
                (
                    "observation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tom.observation",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ScienceResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=30)),
                ("author", models.CharField(default="", max_length=200)),
                ("uri", models.CharField(max_length=200)),
                (
                    "target",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tom.target"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PhotometryRawData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uri", models.CharField(max_length=200)),
                ("size", models.IntegerField(default=0)),
                (
                    "observation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tom.observation",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OtherRawData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uri", models.CharField(max_length=200)),
                ("size", models.IntegerField(default=0)),
                ("description", models.CharField(max_length=200)),
                (
                    "observation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tom.observation",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="observation",
            name="observatory",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="tom.observatory"
            ),
        ),
        migrations.AddField(
            model_name="observation",
            name="observers",
            field=models.ManyToManyField(to="tom.person"),
        ),
        migrations.AddField(
            model_name="observation",
            name="observing_program",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="tom.observingprogram"
            ),
        ),
        migrations.AddField(
            model_name="observation",
            name="purpose",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="tom.observationpurpose"
            ),
        ),
        migrations.AddField(
            model_name="observation",
            name="target",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="tom.target"
            ),
        ),
        migrations.CreateModel(
            name="ScienceTarget",
            fields=[
                (
                    "target_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="tom.target",
                    ),
                ),
                ("calibrations", models.ManyToManyField(to="tom.calibrationtarget")),
            ],
            bases=("tom.target",),
        ),
    ]
